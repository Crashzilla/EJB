package br.com.fiap.servlet;

import java.io.IOException;
import java.util.List;

import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import br.com.fiap.bean.FuncionariosBeanRemote;
import br.com.fiap.entity.Funcionarios;

@WebServlet("/funcionarios")
public class ServletFuncionarios extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public ServletFuncionarios() {
		super();
		// TODO Auto-generated constructor stub
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try {
			InitialContext ctx = new InitialContext();
			FuncionariosBeanRemote service = (FuncionariosBeanRemote) ctx.lookup("ejb:/Exercicio02_Funcionarios/FuncionariosBean!br.com.fiap.bean.FuncionariosBeanRemote");
			
			Funcionarios func = service.consulta(Integer.parseInt(request.getParameter("cpf")));
			
			request.setAttribute("func", func);
			request.getRequestDispatcher("consulta.jsp").forward(request, response);
			
		} catch (NamingException e) {
			e.printStackTrace();
		}
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		Funcionarios func = new Funcionarios();

		func.setCpf(Integer.parseInt(request.getParameter("cpf")));
		func.setNome(request.getParameter("nome"));
		func.setCargo(request.getParameter("cargo"));
		func.setSalario(Double.parseDouble(request.getParameter("salario")));
		func.setIrpf(Double.parseDouble(request.getParameter("irpf")));
		func.setInss(Double.parseDouble(request.getParameter("inss")));

		try {


			InitialContext ctx = new InitialContext();
			FuncionariosBeanRemote service = (FuncionariosBeanRemote) ctx.lookup("ejb:/Exercicio02_Funcionarios/FuncionariosBean!br.com.fiap.bean.FuncionariosBeanRemote");

			service.add(func);

			doGet(request, response);

		} catch (Exception e) {
			e.printStackTrace();
		}

		doGet(request, response);
	}

}
